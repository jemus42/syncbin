#!/usr/bin/env bash

# File dump utility - uploads files to a remote server and provides shareable links

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
RESET='\033[0m'

# Icons
UPLOAD="â¬†"
LINK="ðŸ”—"
CHECK="âœ“"
ERROR="âœ—"

# Configuration
REMOTE_HOST="horst"
REMOTE_PATH="dump.jemu.name"
BASE_URL="https://dump.jemu.name"
DUMPLOG="$HOME/.dumplog"

# Helper functions
print_error() {
  echo -e "${RED}${ERROR} $1${RESET}" >&2
}

print_success() {
  echo -e "${GREEN}${CHECK} $1${RESET}"
}

print_info() {
  echo -e "${CYAN}$1${RESET}"
}

print_url() {
  echo -e "${BOLD}${BLUE}$1${RESET}"
}

# Check if at least one file is provided
if [ $# -eq 0 ]; then
  print_error "No files specified"
  echo "Usage: $(basename "$0") <file1> [file2] ..."
  exit 1
fi

# Check if rsync is available
if ! command -v rsync >/dev/null 2>&1; then
  print_error "rsync is not installed. Please install rsync to use this tool."
  exit 1
fi

# Process each file
for filearg in "$@"; do
  # Check if file exists
  if [ ! -e "$filearg" ]; then
    print_error "File not found: $filearg"
    continue
  fi
  
  # Get the basename for the URL
  FILE=$(basename "$filearg")
  
  echo
  print_info "${UPLOAD} Uploading: ${BOLD}$FILE${RESET}"
  
  # Upload the file with rsync
  if rsync -avh --progress "${filearg}" -e ssh "${REMOTE_HOST}:${REMOTE_PATH}" 2>/dev/null; then
    URL="${BASE_URL}/$FILE"
    
    print_success "Upload complete!"
    echo
    print_info "${LINK} Share URL:"
    print_url "  $URL"
    
    # Copy to clipboard on macOS if user is Lukas
    if [[ "$USER" == "Lukas" ]] && command -v pbcopy >/dev/null 2>&1; then
      echo "$URL" | pbcopy
      print_info "  (copied to clipboard)"
    fi
    
    # Log the upload
    echo "$(date '+%Y-%m-%d %H:%M:%S'): $FILE â€“ $URL" >> "$DUMPLOG"
    
    # Send notification on macOS if terminal-notifier is available
    if command -v terminal-notifier >/dev/null 2>&1; then
      terminal-notifier -title "File Uploaded" \
                       -message "$FILE" \
                       -subtitle "Click to view log" \
                       -execute "code '$DUMPLOG'" \
                       >/dev/null 2>&1
    fi
  else
    print_error "Failed to upload: $FILE"
    print_info "  Check your SSH connection to ${REMOTE_HOST}"
  fi
done

echo