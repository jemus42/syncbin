#!/usr/bin/env Rscript

# Check if required packages are installed
check_package <- function(pkg) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    cat(paste0("Package '", pkg, "' is not installed.\n"))
    cat(paste0("Would you like to install it now? (y/n): "))
    response <- readLines(con = "stdin", n = 1)
    if (tolower(response) %in% c("y", "yes")) {
      install.packages(pkg, repos = "https://cloud.r-project.org")
      cat(paste0("'", pkg, "' has been installed.\n"))
    } else {
      cat("Cannot proceed without required packages. Exiting.\n")
      quit(save = "no", status = 1)
    }
  }
}

check_package("cli")
check_package("rlang")
check_package("pak")

args <- commandArgs(trailingOnly = TRUE)

# Try to read from stdin using non-blocking mode
con <- file('stdin', open = 'r', blocking = FALSE)
stdin_lines <- readLines(con)
close(con)

# Filter out empty lines and whitespace
stdin_lines <- stdin_lines[nzchar(trimws(stdin_lines))]

if (length(stdin_lines) > 0) {
  # Data was piped in via stdin
  cli::cli_inform("Installing packages from stdin: {stdin_lines}")
  pak::pak(stdin_lines)
} else if (length(args) == 0) {
  cli::cli_inform("Running pak::pak()")
  pak::pak()
} else if (length(args) == 1 && args[1] == ".") {
  cli::cli_inform("Running pak::local_install(upgrade = FALSE)")
  pak::local_install(upgrade = FALSE)
} else {
  cli::cli_inform("Installing packages: {args}")
  pak::pak(args)
}