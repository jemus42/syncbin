# Misc options ----

# Set up default repos
options(repos = c(
  CRAN = "https://cloud.r-project.org/",
#  gadenbuie = "https://gadenbuie.r-universe.dev",
#  jemus42 = "https://jemus42.r-universe.dev",
#  tadaadata = "https://tadaadata.r-universe.dev"
))

# If on mac, add CRAN mac repo
if (.Platform$pkgType == "mac.binary") {
  options(repos = c(
    CRANMAC = "https://mac.r-project.org/", getOption("repos")
  ))
  # If on Linux, add RSPM
} else if (Sys.info()[["sysname"]] == "Linux") {
  if (grepl("focal", system("lsb_release -c", intern = TRUE))) {
    options(repos = c(
      RSPM = "https://packagemanager.rstudio.com/all/__linux__/focal/latest",
      getOption("repos")
    ))
  }
  if (grepl("bionic", system("lsb_release -c", intern = TRUE))) {
    options(repos = c(
      RSPM = "https://packagemanager.rstudio.com/all/__linux__/bionic/latest",
      getOption("repos")
    ))
  }
}

options(menu.graphics = FALSE)
options(max.print = 100)       # Orig: 1000; Less risk of console flood
options(Ncpus = max(1L, parallel::detectCores() - 1L))  # CPU core detection
options(mc.cores = max(1L, parallel::detectCores() - 1L))


# enable autocompletions for package names in require(), library()
utils::rc.settings(ipck = TRUE)

# warnings are errors
# options(warn = 2)

# fancy quotes are annoying and lead to
# 'copy + paste' bugs / frustrations
options(useFancyQuotes = FALSE)

if (requireNamespace("rlang", quietly = TRUE)) {
  options(error = rlang::entrace)
}

# Source file with credentials for limer
if (file.exists("~/.R/credentials.R")) source("~/.R/credentials.R")

# Possibly fix various locale issues
# Sys.setlocale('LC_ALL','C')
# options(encoding = "UTF-8")
# Also check via l10n_info()

# Prompt ----
options(prompt = "\033[32m★\033[39m ", continue = " ↳ " )

# Devtools ----
options(github.user = "jemus42")

options(
  usethis.full_name = "Lukas Burk",
  usethis.name = "Lukas Burk",
  usethis.description = list(
    `Authors@R` = utils::person(
      "Lukas", "Burk", email = "github@quantenbrot.de",
      role = c("aut", "cre"), comment = c(ORCID = '0000-0001-7528-3795')
    ),
    License = "MIT + file LICENSE",
    Version = "0.0.0.9000"
  ),
  usethis.protocol  = "https"
)

# if (interactive() & requireNamespace("credentials", quietly = TRUE)) {
#   suppressMessages(credentials::set_github_pat())
# }

# Blogdown ----
options(servr.daemon = TRUE, blogdown.author = "Lukas")

# VSCode ----
options(
  # activate RStudio Addins on command pallet
  vsc.rstudioapi = TRUE,
  # interactive plots with {httpgd}
  vsc.use_httpgd = TRUE,
  vsc.rstudioapi = TRUE,
  # code completion triggers
  languageserver.server_capabilities = list(
    signatureHelpProvider = list(triggerCharacters = list("(", ",", "$")),
    completionProvider = list(
      resolveProvider = TRUE, triggerCharacters = list(".", ":", "$")
    )
  )
)

if (interactive() && requireNamespace("rsthemes", quietly = TRUE)) {
  rsthemes::set_theme_favorite(c(
    "GitHub {rsthemes}", "Night Owl {rsthemes}",
    "Yule RStudio (Reduced Motion) {rsthemes}", "Yule RStudio {rsthemes}"
  ))

  rsthemes::set_theme_light("GitHub {rsthemes}")
  rsthemes::set_theme_dark("Monokai Spacegray Eighties")
}

# Startup ----
.First <- function() {
  version     <- R.version.string
  date_string <- format(Sys.time(), "%a %F %T %z (%Z)")
  utf8        <- l10n_info()$`UTF-8`

  if (requireNamespace("crayon", quietly = TRUE)) {
    utf8 <- ifelse(utf8, crayon::bgGreen("enabled"), crayon::bgRed("disabled!"))
    version <- crayon::bold(version)
  }

  startup_msg <- paste0(
    version, " on ", date_string, "\n",
    "UTF-8: ", utf8
  )

  cat(startup_msg, "\n")

  if (interactive()) {
    random <- stats::runif(1)

    # The Good Place quotes
    # remotes::install_github("adam-gruer/goodshirt")
    if (random > 0.7 & requireNamespace("goodshirt", quietly = TRUE)) {
      print(goodshirt::soul_squad())
    }

    # install.packages("statquotes")
    if (random < 0.3 & requireNamespace("statquotes", quietly = TRUE)) {
      print(statquotes::statquote())
    }
  }

  cat("\n")
}
